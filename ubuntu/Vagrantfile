# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'socket'
require 'ipaddr'

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.hostname = "postgis-vagrant"

  # To confirm that ssh fowarding is working, run the following from inside the
  # guest machine:
  #
  #   ssh -T git@github.com
  #
  # You should see something like "Hi <your name here>! You've successfully
  # authenticated, but GitHub does not provide shell access."
  #
  # You may need to run `ssh-add` on your host machine to add your private key
  # identities to the authentication agent.
  config.ssh.forward_agent = true
  
  # For remote access to the PostgreSQL server, 
  # forward port 6543 on the host to 5432 on the guest
  config.vm.network :forwarded_port, guest: 5432, host: 6543

  # VirtualBox specific configurations
  config.vm.provider :virtualbox do |vb|

    # How much memory to use?
    vb.customize ["modifyvm", :id, "--memory", 2048]

    # How many CPUs to use?
    vb.customize ["modifyvm", :id, "--cpus", 1]

    # Fast I/O?
    # vb.customize ["modifyvm", :id, "--ioapic", "on"]

    # Use the VirtualBox GUI for graphic desktop?
    vb.gui = false
    
  end

  # OSX specific configuration
  if RUBY_PLATFORM.include? "darwin"

    # Customize the private network's IP. 
    # config.vm.network "private_network", ip: "192.168.50.4"

    # Use NFS for the synced folder?
    # config.vm.synced_folder ".", "/vagrant", nfs: true

  end

  # Windows specific configuration
  if RUBY_PLATFORM.include? "win32"
    config.vm.synced_folder ".", "/vagrant", type: "smb"
  end



  ##################################################################################
  # Default to Ubuntu
  #
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_url = "https://vagrantcloud.com/ubuntu/boxes/trusty64/versions/14.04/providers/virtualbox.box"

  preCmd = "apt-get install -q -y python-software-properties"
  updateCmd = "apt-get update -qq"

  repoCmd = "add-apt-repository -y"
  repoList = [
    "ppa:ubuntugis/ubuntugis-unstable"
  ]

  packageCmd = "apt-get install -q -y"
  packageList = [
    "git",
    "subversion",
    "build-essential",
    "pkg-config",
    "cmake",
    "cmake-curses-gui",
    "perl",
    "vim",
    "autoconf",
    "screen",
    "libtool",
    "libgtk-3-dev",
    "libgeos-dev",
    "libgeos++-dev",
    "libgdal-dev",
    "libpq-dev",
    "libproj-dev",
    "libxml2-dev",
    "libjson-c-dev",
    "libcunit1-dev",
    "postgresql-server-dev-9.3",
    "xsltproc",
    "docbook-xsl",
    "imagemagick"
  ];  


    
  if Dir.glob("#{File.dirname(__FILE__)}/.vagrant/machines/default/*/id").empty?

	  inlineScript = ""

    if preCmd != ""
      inlineScript << preCmd << " ; "
    end

    # Install all the extra repositories
	  if repoList.length > 0
		  repoList.each { |repo| inlineScript << repoCmd << " " << repo << " ; " }
	  end

    # Update the base software (can take a while!)
    # inlineScript << updateCmd << " ; "

	  # install packages we need we need
	  inlineScript << packageCmd << " " << packageList.join(" ") << " ; "
	  config.vm.provision :shell, :inline => inlineScript

    # scripts = [
    #   "startup.sh",
    #   "pgpointcloud.sh"
    # ];
    #
    # scripts.each { |script| config.vm.provision :shell, :path => "scripts/vagrant/" << script }
  end
  

end
